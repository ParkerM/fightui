image: node:12

stages:
- build
- test
- deploy

build:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
    policy: pull
  script:
  - yarn install
  - yarn build-package:prod
  - cd dist && yarn install --production
  artifacts:
    paths:
    - manifest.yml
    - Procfile
    - dist/
    when: on_success
  only:
  - master

jest_test:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  script:
  - yarn install
  - yarn test:ci --coverage
  coverage: '/All files\s*\|(?:\s*[\d\.]*\s*\|){3}\s*([\d\.]+)/'
  artifacts:
    paths:
    - coverage/lcov-report/
  only:
  - master

vulerability_scan:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
    policy: pull
  script:
  - yarn install
  - yarn test:vulnerabilities
  only:
  - master
  allow_failure: true

deploy_heroku:
  stage: deploy
  dependencies:
  - build
  before_script:
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
  - mv Procfile -t dist/ && cd dist
  - git init
  - git add .
  - git commit -m "Heroku deploy ${CI_COMMIT_SHORT_SHA}"
  - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/howlongtilthefight.git
  - git push heroku master -f
  environment:
    name: HEROKU_PROD
  only:
  - master

.deploy_pws:
  stage: deploy
  dependencies:
  - build
  script:
  - mv manifest.yml -t dist/ && cd dist
  - curl --location "https://cli.run.pivotal.io/stable?release=linux64-binary&source=github" | tar zx
  - ./cf api api.run.pivotal.io
  - ./cf auth
  - ./cf target -o $CF_ORG -s $CF_SPACE
  - ./cf push
  environment:
    name: PWS_PROD
  only:
  - master

# Use GitLab pages to host coverage report
pages:
  stage: deploy
  dependencies:
  - jest_test
  script:
  - mkdir -p public/coverage
  - mv coverage/lcov-report/* public/coverage
  artifacts:
    paths:
    - public
  only:
  - master
  allow_failure: true
